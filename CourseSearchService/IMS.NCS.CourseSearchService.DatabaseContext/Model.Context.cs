//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMS.NCS.CourseSearchService.DatabaseContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SFA_SearchAPIEntities : DbContext
    {
        public SFA_SearchAPIEntities()
            : base("name=SFA_SearchAPIEntities")
        {
    		((IObjectContextAdapter)this).ObjectContext.CommandTimeout = 180;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<StopWord> StopWords { get; set; }
        public virtual DbSet<Log> Logs { get; set; }
    
        public virtual ObjectResult<API_CategoryCode_GetAll_v2_Result> API_CategoryCode_GetAll_v2(Nullable<int> publicAPI, string aPIKey)
        {
            var publicAPIParameter = publicAPI.HasValue ?
                new ObjectParameter("PublicAPI", publicAPI) :
                new ObjectParameter("PublicAPI", typeof(int));
    
            var aPIKeyParameter = aPIKey != null ?
                new ObjectParameter("APIKey", aPIKey) :
                new ObjectParameter("APIKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_CategoryCode_GetAll_v2_Result>("API_CategoryCode_GetAll_v2", publicAPIParameter, aPIKeyParameter);
        }
    
        public virtual ObjectResult<API_Course_GetById_v2_Result> API_Course_GetById_v2(Nullable<int> courseId, Nullable<int> publicAPI, string aPIKey)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var publicAPIParameter = publicAPI.HasValue ?
                new ObjectParameter("PublicAPI", publicAPI) :
                new ObjectParameter("PublicAPI", typeof(int));
    
            var aPIKeyParameter = aPIKey != null ?
                new ObjectParameter("APIKey", aPIKey) :
                new ObjectParameter("APIKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Course_GetById_v2_Result>("API_Course_GetById_v2", courseIdParameter, publicAPIParameter, aPIKeyParameter);
        }
    
        public virtual ObjectResult<API_CourseList_Get_v2_Result> API_CourseList_Get_v2(string courseSearchText, string providerSearchText, string qualificationType, string qualificationLevel, string studyMode, string attendanceMode, string attendancePattern, Nullable<System.DateTime> earliestStartDate, string ldscCategoryCode, Nullable<bool> erTtgStatus, string a10Code, Nullable<bool> indLivingFlg, string skillForLifeFlg, string erTTGFlag, string erAppStatus, string adultlrStatus, string otherFundingStatus, Nullable<System.DateTime> appClosed, Nullable<bool> flexiStartDate, string location, Nullable<double> distance, Nullable<int> pageNumber, Nullable<int> numberOfRecordPerPage, string sortBy, Nullable<int> providerId, Nullable<int> publicAPI, Nullable<bool> dFEFunded, string aPIKey)
        {
            var courseSearchTextParameter = courseSearchText != null ?
                new ObjectParameter("CourseSearchText", courseSearchText) :
                new ObjectParameter("CourseSearchText", typeof(string));
    
            var providerSearchTextParameter = providerSearchText != null ?
                new ObjectParameter("ProviderSearchText", providerSearchText) :
                new ObjectParameter("ProviderSearchText", typeof(string));
    
            var qualificationTypeParameter = qualificationType != null ?
                new ObjectParameter("QualificationType", qualificationType) :
                new ObjectParameter("QualificationType", typeof(string));
    
            var qualificationLevelParameter = qualificationLevel != null ?
                new ObjectParameter("QualificationLevel", qualificationLevel) :
                new ObjectParameter("QualificationLevel", typeof(string));
    
            var studyModeParameter = studyMode != null ?
                new ObjectParameter("StudyMode", studyMode) :
                new ObjectParameter("StudyMode", typeof(string));
    
            var attendanceModeParameter = attendanceMode != null ?
                new ObjectParameter("AttendanceMode", attendanceMode) :
                new ObjectParameter("AttendanceMode", typeof(string));
    
            var attendancePatternParameter = attendancePattern != null ?
                new ObjectParameter("AttendancePattern", attendancePattern) :
                new ObjectParameter("AttendancePattern", typeof(string));
    
            var earliestStartDateParameter = earliestStartDate.HasValue ?
                new ObjectParameter("EarliestStartDate", earliestStartDate) :
                new ObjectParameter("EarliestStartDate", typeof(System.DateTime));
    
            var ldscCategoryCodeParameter = ldscCategoryCode != null ?
                new ObjectParameter("LdscCategoryCode", ldscCategoryCode) :
                new ObjectParameter("LdscCategoryCode", typeof(string));
    
            var erTtgStatusParameter = erTtgStatus.HasValue ?
                new ObjectParameter("ErTtgStatus", erTtgStatus) :
                new ObjectParameter("ErTtgStatus", typeof(bool));
    
            var a10CodeParameter = a10Code != null ?
                new ObjectParameter("A10Code", a10Code) :
                new ObjectParameter("A10Code", typeof(string));
    
            var indLivingFlgParameter = indLivingFlg.HasValue ?
                new ObjectParameter("IndLivingFlg", indLivingFlg) :
                new ObjectParameter("IndLivingFlg", typeof(bool));
    
            var skillForLifeFlgParameter = skillForLifeFlg != null ?
                new ObjectParameter("SkillForLifeFlg", skillForLifeFlg) :
                new ObjectParameter("SkillForLifeFlg", typeof(string));
    
            var erTTGFlagParameter = erTTGFlag != null ?
                new ObjectParameter("ErTTGFlag", erTTGFlag) :
                new ObjectParameter("ErTTGFlag", typeof(string));
    
            var erAppStatusParameter = erAppStatus != null ?
                new ObjectParameter("ErAppStatus", erAppStatus) :
                new ObjectParameter("ErAppStatus", typeof(string));
    
            var adultlrStatusParameter = adultlrStatus != null ?
                new ObjectParameter("AdultlrStatus", adultlrStatus) :
                new ObjectParameter("AdultlrStatus", typeof(string));
    
            var otherFundingStatusParameter = otherFundingStatus != null ?
                new ObjectParameter("OtherFundingStatus", otherFundingStatus) :
                new ObjectParameter("OtherFundingStatus", typeof(string));
    
            var appClosedParameter = appClosed.HasValue ?
                new ObjectParameter("AppClosed", appClosed) :
                new ObjectParameter("AppClosed", typeof(System.DateTime));
    
            var flexiStartDateParameter = flexiStartDate.HasValue ?
                new ObjectParameter("FlexiStartDate", flexiStartDate) :
                new ObjectParameter("FlexiStartDate", typeof(bool));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("Distance", distance) :
                new ObjectParameter("Distance", typeof(double));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var numberOfRecordPerPageParameter = numberOfRecordPerPage.HasValue ?
                new ObjectParameter("NumberOfRecordPerPage", numberOfRecordPerPage) :
                new ObjectParameter("NumberOfRecordPerPage", typeof(int));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var providerIdParameter = providerId.HasValue ?
                new ObjectParameter("ProviderId", providerId) :
                new ObjectParameter("ProviderId", typeof(int));
    
            var publicAPIParameter = publicAPI.HasValue ?
                new ObjectParameter("PublicAPI", publicAPI) :
                new ObjectParameter("PublicAPI", typeof(int));
    
            var dFEFundedParameter = dFEFunded.HasValue ?
                new ObjectParameter("DFEFunded", dFEFunded) :
                new ObjectParameter("DFEFunded", typeof(bool));
    
            var aPIKeyParameter = aPIKey != null ?
                new ObjectParameter("APIKey", aPIKey) :
                new ObjectParameter("APIKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_CourseList_Get_v2_Result>("API_CourseList_Get_v2", courseSearchTextParameter, providerSearchTextParameter, qualificationTypeParameter, qualificationLevelParameter, studyModeParameter, attendanceModeParameter, attendancePatternParameter, earliestStartDateParameter, ldscCategoryCodeParameter, erTtgStatusParameter, a10CodeParameter, indLivingFlgParameter, skillForLifeFlgParameter, erTTGFlagParameter, erAppStatusParameter, adultlrStatusParameter, otherFundingStatusParameter, appClosedParameter, flexiStartDateParameter, locationParameter, distanceParameter, pageNumberParameter, numberOfRecordPerPageParameter, sortByParameter, providerIdParameter, publicAPIParameter, dFEFundedParameter, aPIKeyParameter);
        }
    
        public virtual ObjectResult<API_LearningAim_GetById_Result> API_LearningAim_GetById(string learningAimReference)
        {
            var learningAimReferenceParameter = learningAimReference != null ?
                new ObjectParameter("LearningAimReference", learningAimReference) :
                new ObjectParameter("LearningAimReference", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_LearningAim_GetById_Result>("API_LearningAim_GetById", learningAimReferenceParameter);
        }
    
        public virtual ObjectResult<API_Provider_GetByProviderId_v2_Result> API_Provider_GetByProviderId_v2(Nullable<int> providerId, Nullable<int> publicAPI, string aPIKey)
        {
            var providerIdParameter = providerId.HasValue ?
                new ObjectParameter("ProviderId", providerId) :
                new ObjectParameter("ProviderId", typeof(int));
    
            var publicAPIParameter = publicAPI.HasValue ?
                new ObjectParameter("PublicAPI", publicAPI) :
                new ObjectParameter("PublicAPI", typeof(int));
    
            var aPIKeyParameter = aPIKey != null ?
                new ObjectParameter("APIKey", aPIKey) :
                new ObjectParameter("APIKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Provider_GetByProviderId_v2_Result>("API_Provider_GetByProviderId_v2", providerIdParameter, publicAPIParameter, aPIKeyParameter);
        }
    
        public virtual ObjectResult<API_Provider_GetAll_v2_Result> API_Provider_GetAll_v2(Nullable<int> publicAPI, string aPIKey)
        {
            var publicAPIParameter = publicAPI.HasValue ?
                new ObjectParameter("PublicAPI", publicAPI) :
                new ObjectParameter("PublicAPI", typeof(int));
    
            var aPIKeyParameter = aPIKey != null ?
                new ObjectParameter("APIKey", aPIKey) :
                new ObjectParameter("APIKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Provider_GetAll_v2_Result>("API_Provider_GetAll_v2", publicAPIParameter, aPIKeyParameter);
        }
    
        public virtual ObjectResult<API_Venue_GetById_Result> API_Venue_GetById(Nullable<int> venueId, Nullable<int> publicAPI)
        {
            var venueIdParameter = venueId.HasValue ?
                new ObjectParameter("VenueId", venueId) :
                new ObjectParameter("VenueId", typeof(int));
    
            var publicAPIParameter = publicAPI.HasValue ?
                new ObjectParameter("PublicAPI", publicAPI) :
                new ObjectParameter("PublicAPI", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Venue_GetById_Result>("API_Venue_GetById", venueIdParameter, publicAPIParameter);
        }
    
        public virtual int ProviderRequestResponesLog_Insert_v2(string serviceMethod, string request, string response, Nullable<int> timeInMillisecond, Nullable<bool> publicAPI, string aPIKey, Nullable<int> recordCount)
        {
            var serviceMethodParameter = serviceMethod != null ?
                new ObjectParameter("ServiceMethod", serviceMethod) :
                new ObjectParameter("ServiceMethod", typeof(string));
    
            var requestParameter = request != null ?
                new ObjectParameter("Request", request) :
                new ObjectParameter("Request", typeof(string));
    
            var responseParameter = response != null ?
                new ObjectParameter("Response", response) :
                new ObjectParameter("Response", typeof(string));
    
            var timeInMillisecondParameter = timeInMillisecond.HasValue ?
                new ObjectParameter("TimeInMillisecond", timeInMillisecond) :
                new ObjectParameter("TimeInMillisecond", typeof(int));
    
            var publicAPIParameter = publicAPI.HasValue ?
                new ObjectParameter("PublicAPI", publicAPI) :
                new ObjectParameter("PublicAPI", typeof(bool));
    
            var aPIKeyParameter = aPIKey != null ?
                new ObjectParameter("APIKey", aPIKey) :
                new ObjectParameter("APIKey", typeof(string));
    
            var recordCountParameter = recordCount.HasValue ?
                new ObjectParameter("RecordCount", recordCount) :
                new ObjectParameter("RecordCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProviderRequestResponesLog_Insert_v2", serviceMethodParameter, requestParameter, responseParameter, timeInMillisecondParameter, publicAPIParameter, aPIKeyParameter, recordCountParameter);
        }
    
        public virtual ObjectResult<API_CourseList_Get_v2_Result> API_CourseList_Get_v3(string courseIncludeFreeText, string courseExcludeFreeText, string courseIncludeExactText, string courseExcludeExactText, string providerSearchText, string qualificationType, string qualificationLevel, string studyMode, string attendanceMode, string attendancePattern, Nullable<System.DateTime> earliestStartDate, string ldscCategoryCode, Nullable<bool> erTtgStatus, string a10Code, Nullable<bool> indLivingFlg, string skillForLifeFlg, string erTTGFlag, string erAppStatus, string adultlrStatus, string otherFundingStatus, Nullable<System.DateTime> appClosed, Nullable<bool> flexiStartDate, string location, Nullable<double> distance, Nullable<int> pageNumber, Nullable<int> numberOfRecordPerPage, string sortBy, Nullable<int> providerId, Nullable<int> publicAPI, Nullable<bool> dFEFunded, string aPIKey, Nullable<int> cutoffPercentage, Nullable<int> providerFreeTextMatch, Nullable<int> courseFreeTextMatch, Nullable<int> searchCourseSummary, Nullable<int> searchQualificationTitle)
        {
            var courseIncludeFreeTextParameter = courseIncludeFreeText != null ?
                new ObjectParameter("CourseIncludeFreeText", courseIncludeFreeText) :
                new ObjectParameter("CourseIncludeFreeText", typeof(string));
    
            var courseExcludeFreeTextParameter = courseExcludeFreeText != null ?
                new ObjectParameter("CourseExcludeFreeText", courseExcludeFreeText) :
                new ObjectParameter("CourseExcludeFreeText", typeof(string));
    
            var courseIncludeExactTextParameter = courseIncludeExactText != null ?
                new ObjectParameter("CourseIncludeExactText", courseIncludeExactText) :
                new ObjectParameter("CourseIncludeExactText", typeof(string));
    
            var courseExcludeExactTextParameter = courseExcludeExactText != null ?
                new ObjectParameter("CourseExcludeExactText", courseExcludeExactText) :
                new ObjectParameter("CourseExcludeExactText", typeof(string));
    
            var providerSearchTextParameter = providerSearchText != null ?
                new ObjectParameter("ProviderSearchText", providerSearchText) :
                new ObjectParameter("ProviderSearchText", typeof(string));
    
            var qualificationTypeParameter = qualificationType != null ?
                new ObjectParameter("QualificationType", qualificationType) :
                new ObjectParameter("QualificationType", typeof(string));
    
            var qualificationLevelParameter = qualificationLevel != null ?
                new ObjectParameter("QualificationLevel", qualificationLevel) :
                new ObjectParameter("QualificationLevel", typeof(string));
    
            var studyModeParameter = studyMode != null ?
                new ObjectParameter("StudyMode", studyMode) :
                new ObjectParameter("StudyMode", typeof(string));
    
            var attendanceModeParameter = attendanceMode != null ?
                new ObjectParameter("AttendanceMode", attendanceMode) :
                new ObjectParameter("AttendanceMode", typeof(string));
    
            var attendancePatternParameter = attendancePattern != null ?
                new ObjectParameter("AttendancePattern", attendancePattern) :
                new ObjectParameter("AttendancePattern", typeof(string));
    
            var earliestStartDateParameter = earliestStartDate.HasValue ?
                new ObjectParameter("EarliestStartDate", earliestStartDate) :
                new ObjectParameter("EarliestStartDate", typeof(System.DateTime));
    
            var ldscCategoryCodeParameter = ldscCategoryCode != null ?
                new ObjectParameter("LdscCategoryCode", ldscCategoryCode) :
                new ObjectParameter("LdscCategoryCode", typeof(string));
    
            var erTtgStatusParameter = erTtgStatus.HasValue ?
                new ObjectParameter("ErTtgStatus", erTtgStatus) :
                new ObjectParameter("ErTtgStatus", typeof(bool));
    
            var a10CodeParameter = a10Code != null ?
                new ObjectParameter("A10Code", a10Code) :
                new ObjectParameter("A10Code", typeof(string));
    
            var indLivingFlgParameter = indLivingFlg.HasValue ?
                new ObjectParameter("IndLivingFlg", indLivingFlg) :
                new ObjectParameter("IndLivingFlg", typeof(bool));
    
            var skillForLifeFlgParameter = skillForLifeFlg != null ?
                new ObjectParameter("SkillForLifeFlg", skillForLifeFlg) :
                new ObjectParameter("SkillForLifeFlg", typeof(string));
    
            var erTTGFlagParameter = erTTGFlag != null ?
                new ObjectParameter("ErTTGFlag", erTTGFlag) :
                new ObjectParameter("ErTTGFlag", typeof(string));
    
            var erAppStatusParameter = erAppStatus != null ?
                new ObjectParameter("ErAppStatus", erAppStatus) :
                new ObjectParameter("ErAppStatus", typeof(string));
    
            var adultlrStatusParameter = adultlrStatus != null ?
                new ObjectParameter("AdultlrStatus", adultlrStatus) :
                new ObjectParameter("AdultlrStatus", typeof(string));
    
            var otherFundingStatusParameter = otherFundingStatus != null ?
                new ObjectParameter("OtherFundingStatus", otherFundingStatus) :
                new ObjectParameter("OtherFundingStatus", typeof(string));
    
            var appClosedParameter = appClosed.HasValue ?
                new ObjectParameter("AppClosed", appClosed) :
                new ObjectParameter("AppClosed", typeof(System.DateTime));
    
            var flexiStartDateParameter = flexiStartDate.HasValue ?
                new ObjectParameter("FlexiStartDate", flexiStartDate) :
                new ObjectParameter("FlexiStartDate", typeof(bool));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("Distance", distance) :
                new ObjectParameter("Distance", typeof(double));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var numberOfRecordPerPageParameter = numberOfRecordPerPage.HasValue ?
                new ObjectParameter("NumberOfRecordPerPage", numberOfRecordPerPage) :
                new ObjectParameter("NumberOfRecordPerPage", typeof(int));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var providerIdParameter = providerId.HasValue ?
                new ObjectParameter("ProviderId", providerId) :
                new ObjectParameter("ProviderId", typeof(int));
    
            var publicAPIParameter = publicAPI.HasValue ?
                new ObjectParameter("PublicAPI", publicAPI) :
                new ObjectParameter("PublicAPI", typeof(int));
    
            var dFEFundedParameter = dFEFunded.HasValue ?
                new ObjectParameter("DFEFunded", dFEFunded) :
                new ObjectParameter("DFEFunded", typeof(bool));
    
            var aPIKeyParameter = aPIKey != null ?
                new ObjectParameter("APIKey", aPIKey) :
                new ObjectParameter("APIKey", typeof(string));
    
            var cutoffPercentageParameter = cutoffPercentage.HasValue ?
                new ObjectParameter("CutoffPercentage", cutoffPercentage) :
                new ObjectParameter("CutoffPercentage", typeof(int));
    
            var providerFreeTextMatchParameter = providerFreeTextMatch.HasValue ?
                new ObjectParameter("ProviderFreeTextMatch", providerFreeTextMatch) :
                new ObjectParameter("ProviderFreeTextMatch", typeof(int));
    
            var courseFreeTextMatchParameter = courseFreeTextMatch.HasValue ?
                new ObjectParameter("CourseFreeTextMatch", courseFreeTextMatch) :
                new ObjectParameter("CourseFreeTextMatch", typeof(int));
    
            var searchCourseSummaryParameter = searchCourseSummary.HasValue ?
                new ObjectParameter("SearchCourseSummary", searchCourseSummary) :
                new ObjectParameter("SearchCourseSummary", typeof(int));
    
            var searchQualificationTitleParameter = searchQualificationTitle.HasValue ?
                new ObjectParameter("SearchQualificationTitle", searchQualificationTitle) :
                new ObjectParameter("SearchQualificationTitle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_CourseList_Get_v2_Result>("API_CourseList_Get_v3", courseIncludeFreeTextParameter, courseExcludeFreeTextParameter, courseIncludeExactTextParameter, courseExcludeExactTextParameter, providerSearchTextParameter, qualificationTypeParameter, qualificationLevelParameter, studyModeParameter, attendanceModeParameter, attendancePatternParameter, earliestStartDateParameter, ldscCategoryCodeParameter, erTtgStatusParameter, a10CodeParameter, indLivingFlgParameter, skillForLifeFlgParameter, erTTGFlagParameter, erAppStatusParameter, adultlrStatusParameter, otherFundingStatusParameter, appClosedParameter, flexiStartDateParameter, locationParameter, distanceParameter, pageNumberParameter, numberOfRecordPerPageParameter, sortByParameter, providerIdParameter, publicAPIParameter, dFEFundedParameter, aPIKeyParameter, cutoffPercentageParameter, providerFreeTextMatchParameter, courseFreeTextMatchParameter, searchCourseSummaryParameter, searchQualificationTitleParameter);
        }
    
        public virtual int AddStopWord(string stopWord)
        {
            var stopWordParameter = stopWord != null ?
                new ObjectParameter("StopWord", stopWord) :
                new ObjectParameter("StopWord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddStopWord", stopWordParameter);
        }
    
        public virtual int DropStopWord(string stopWord)
        {
            var stopWordParameter = stopWord != null ?
                new ObjectParameter("StopWord", stopWord) :
                new ObjectParameter("StopWord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DropStopWord", stopWordParameter);
        }
    
        public virtual ObjectResult<string> GetStopWords()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetStopWords");
        }
    }
}
