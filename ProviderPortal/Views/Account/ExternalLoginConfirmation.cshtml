@model Tribal.SkillsFundingAgency.ProviderPortal.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = AppGlobal.Language.GetText(this, "Title", "Register");
}
<h2>@AppGlobal.Language.GetText(this, "Header", "Register")</h2>
<h3>@String.Format(AppGlobal.Language.GetText(this, "SubHeader", "Associate your {0} account."), @ViewBag.LoginProvider)</h3>

@using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <h4>@AppGlobal.Language.GetText(this, "FormHeader", "Association Form")</h4>
    <hr />
    @Html.EditableDataValidationSummary(true, "", new { @class = "text-danger" })
    <p class="text-info">
        @String.Format(AppGlobal.Language.GetText(this, "SuccessMessage", 
            @"You've successfully authenticated with <strong>{0}</strong>.
            Please enter a user name for this site below and click the {1} button to finish
            logging in."), @ViewBag.LoginProvider, AppGlobal.Language.GetText(this, "Submit", "Register"))
    </p>
    @Html.RequiredFields(new {@class="col-md-offset-2"})
    <div class="form-group">
        @Html.LanguageLabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="@AppGlobal.Language.GetText(this, "Submit", "Register")" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
