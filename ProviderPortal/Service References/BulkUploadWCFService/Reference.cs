//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnqueueParameters", Namespace="urn:Tribal/SFANCD/BulkUpload")]
    [System.SerializableAttribute()]
    public partial class EnqueueParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserContextItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserContextTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserContextItemId {
            get {
                return this.UserContextItemIdField;
            }
            set {
                if ((this.UserContextItemIdField.Equals(value) != true)) {
                    this.UserContextItemIdField = value;
                    this.RaisePropertyChanged("UserContextItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserContextType {
            get {
                return this.UserContextTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserContextTypeField, value) != true)) {
                    this.UserContextTypeField = value;
                    this.RaisePropertyChanged("UserContextType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnqueueResult", Namespace="urn:Tribal/SFANCD/BulkUpload")]
    [System.SerializableAttribute()]
    public partial class EnqueueResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ProviderIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ProviderIds {
            get {
                return this.ProviderIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderIdsField, value) != true)) {
                    this.ProviderIdsField = value;
                    this.RaisePropertyChanged("ProviderIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BulkUploadFault", Namespace="urn:Tribal/SFANCD/BulkUpload")]
    [System.SerializableAttribute()]
    public partial class BulkUploadFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BulkUploadProviderFault", Namespace="urn:Tribal/SFANCD/BulkUpload")]
    [System.SerializableAttribute()]
    public partial class BulkUploadProviderFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfirmParameters", Namespace="urn:Tribal/SFANCD/BulkUpload")]
    [System.SerializableAttribute()]
    public partial class ConfirmParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BulkUploadIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BulkUploadId {
            get {
                return this.BulkUploadIdField;
            }
            set {
                if ((this.BulkUploadIdField.Equals(value) != true)) {
                    this.BulkUploadIdField = value;
                    this.RaisePropertyChanged("BulkUploadId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:Tribal/SFANCD/BulkUpload", ConfigurationName="BulkUploadWCFService.IBulkUploadWCFService")]
    public interface IBulkUploadWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Tribal/SFANCD/BulkUpload/IBulkUploadWCFService/Enqueue", ReplyAction="urn:Tribal/SFANCD/BulkUpload/IBulkUploadWCFService/EnqueueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.BulkUploadFault), Action="urn:Tribal/SFANCD/BulkUpload/IBulkUploadWCFService/EnqueueBulkUploadFaultFault", Name="BulkUploadFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.BulkUploadProviderFault), Action="urn:Tribal/SFANCD/BulkUpload/IBulkUploadWCFService/EnqueueBulkUploadProviderFault" +
            "Fault", Name="BulkUploadProviderFault")]
        Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.EnqueueResult Enqueue(Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.EnqueueParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Tribal/SFANCD/BulkUpload/IBulkUploadWCFService/Enqueue", ReplyAction="urn:Tribal/SFANCD/BulkUpload/IBulkUploadWCFService/EnqueueResponse")]
        System.Threading.Tasks.Task<Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.EnqueueResult> EnqueueAsync(Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.EnqueueParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Tribal/SFANCD/BulkUpload/IBulkUploadWCFService/Confirm", ReplyAction="urn:Tribal/SFANCD/BulkUpload/IBulkUploadWCFService/ConfirmResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.BulkUploadFault), Action="urn:Tribal/SFANCD/BulkUpload/IBulkUploadWCFService/ConfirmBulkUploadFaultFault", Name="BulkUploadFault")]
        void Confirm(Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.ConfirmParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Tribal/SFANCD/BulkUpload/IBulkUploadWCFService/Confirm", ReplyAction="urn:Tribal/SFANCD/BulkUpload/IBulkUploadWCFService/ConfirmResponse")]
        System.Threading.Tasks.Task ConfirmAsync(Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.ConfirmParameters parameters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBulkUploadWCFServiceChannel : Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.IBulkUploadWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BulkUploadWCFServiceClient : System.ServiceModel.ClientBase<Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.IBulkUploadWCFService>, Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.IBulkUploadWCFService {
        
        public BulkUploadWCFServiceClient() {
        }
        
        public BulkUploadWCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BulkUploadWCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BulkUploadWCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BulkUploadWCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.EnqueueResult Enqueue(Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.EnqueueParameters parameters) {
            return base.Channel.Enqueue(parameters);
        }
        
        public System.Threading.Tasks.Task<Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.EnqueueResult> EnqueueAsync(Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.EnqueueParameters parameters) {
            return base.Channel.EnqueueAsync(parameters);
        }
        
        public void Confirm(Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.ConfirmParameters parameters) {
            base.Channel.Confirm(parameters);
        }
        
        public System.Threading.Tasks.Task ConfirmAsync(Tribal.SkillsFundingAgency.ProviderPortal.BulkUploadWCFService.ConfirmParameters parameters) {
            return base.Channel.ConfirmAsync(parameters);
        }
    }
}
